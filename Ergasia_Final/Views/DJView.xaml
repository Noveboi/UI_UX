<UserControl x:Class="Ergasia_Final.Views.DJView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ergasia_Final.Views"
             mc:Ignorable="d" 
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:dd="urn:gong-wpf-dragdrop" xmlns:viewmodels="clr-namespace:Ergasia_Final.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:DJViewModel}"
             d:DesignHeight="450" d:DesignWidth="800"
             MinHeight="450" MinWidth="600">
    <Border BorderBrush="Purple" BorderThickness="10" Background="{DynamicResource MainBackground}">
        <Grid Background="{DynamicResource MainBackground}" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="75"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <!--Auto-DJ Buttons-->
                <Style TargetType="Button" x:Key="autoDjButton">
                    <Setter Property="MinWidth" Value="50"/>
                    <Setter Property="Margin" Value="15"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="BorderThickness" Value="2"/>
                    <Setter Property="BorderBrush" Value="MediumPurple"/>
                    <Setter Property="MinHeight" Value="15"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="FontSize" Value="18"/>
                    <Setter Property="FontWeight" Value="Light"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextForeground}"/>
                    <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}">
                                    <ContentPresenter Margin="2"
                                                      RecognizesAccessKey="True"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#ff11aa" Opacity="0.3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#666666"/>
                            <Setter Property="BorderBrush" Value="#aaaaaa"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <!--
                    Slider Custom Style
                    Refer to: https://learn.microsoft.com/en-us/dotnet/api/system.windows.controls.slider?view=windowsdesktop-8.0
                -->
                <Style TargetType="RepeatButton" x:Key="SliderButtonStyle">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border Background="Transparent"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="Thumb">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Width" Value="50"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Thumb">
                                <Border x:Name="sliderThumb"
                                        VerticalAlignment="Stretch"
                                        CornerRadius="5"
                                        BorderBrush="LightPink"
                                        BorderThickness="1">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#0a90c9" Offset="0.0"/>
                                                    <GradientStop Color="#79c8ea" Offset="1.0"/>
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <TextBlock Text="{Binding Path=Bpm, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center"
                                               FontSize="18" 
                                               FontWeight="Light"
                                               FontStretch="Medium"
                                               FontFamily="Franklin Gothic"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="sliderThumb">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStopCollection>
                                                            <GradientStop Color="#7a90c9" Offset="0.0"/>
                                                            <GradientStop Color="#e9c8ea" Offset="1.0"/>
                                                        </GradientStopCollection>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="Slider">
                    <Setter Property="Minimum" Value="60"/>
                    <Setter Property="Maximum" Value="180"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Slider">
                                <Border x:Name="TrackBackground"
                                        Height="50"
                                        CornerRadius="5"
                                        BorderThickness="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#76aaff"
                                                        Offset="0.0" />
                                                    <GradientStop Color="#11aaff"
                                                        Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="#76aaff" Offset="0.0" />
                                                    <GradientStop Color="#11aaff" Offset="1.0"/>
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Track x:Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                                          Command="Slider.DecreaseLarge" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb/>
                                        </Track.Thumb>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderButtonStyle}"
                                                          Command="Slider.IncreaseLarge" />
                                        </Track.IncreaseRepeatButton>
                                    </Track>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                
                <!--Auto-DJ Headers-->
                <Style TargetType="TextBlock" x:Key="autoDjHeader">
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="FontWeight" Value="Medium"/>
                    <Setter Property="Foreground" Value="HotPink"/>
                </Style>

                <!--Color Wheel Button-->
                <Style TargetType="Button" x:Key="cWheelButton">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Height" Value="50"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Grid Margin="5" x:Name="cWheelGrid">
                                    <Image Source="/Images/color_wheel.png"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Margin" Value="0" TargetName="cWheelGrid"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                
                <!--DataGrid Styles-->
                <!--Column Headers-->
                <Style TargetType="DataGridColumnHeader" x:Key="ColumnHeader">
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Padding" Value="10"/>
                    <Setter Property="Foreground" Value="#f0f0f0"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Medium"/>
                    <Setter Property="Background" Value="#AA0125"/>
                </Style>
                <Style TargetType="DataGridColumnHeader" x:Key="RowIDColumnHeader" BasedOn="{StaticResource ColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                </Style>
                <!--Rows-->
                <Style TargetType="DataGridRow">
                    <Setter Property="MinHeight" Value="50"/>
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#222233"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#332233"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#ae84fe" Opacity="0.25"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#7e14fe" Opacity="0.4"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <!--Cells-->
                <Style TargetType="DataGridCell" x:Key="CellStyle">
                    <Setter Property="FontSize" Value="16"/>
                    <Setter Property="Foreground" Value="#f0f0f0"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="20"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="FontWeight" Value="Light"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{x:Null}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                <!--DataGridTextColumn Style that enables TextWrapping-->
                <Style TargetType="TextBlock" x:Key="SongQueueWrap">
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <!--Special style for the row ID column-->
                <Style x:Key="rowIdStyle" TargetType="DataGridCell" 
                       BasedOn="{StaticResource CellStyle}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="FontSize" Value="20"/>
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="#dfdfdf" Opacity="0.5"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="#111111" Opacity="0.2"/>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="rowIdTextStyle" TargetType="TextBlock" 
                       BasedOn="{StaticResource SongQueueWrap}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
            </Grid.Resources>
            
            <!--
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                Control Section
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            -->
            <!--Song Queue (Λίστα Αναπαραγωγής)-->
            <DataGrid x:Name="SongQueue"
                      Background="#222233"
                      Margin="10"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      BorderThickness="2"
                      BorderBrush="#ddccff"
                      AlternationCount="2"
                      ColumnWidth="*"
                      dd:DragDrop.DropHandler="{Binding}"
                      dd:DragDrop.IsDragSource="True"
                      dd:DragDrop.IsDropTarget="True"
                      GridLinesVisibility="None"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      AutoGenerateColumns="False"
                      VerticalScrollBarVisibility="Disabled"
                      HorizontalScrollBarVisibility="Disabled"
                      CanUserResizeRows="False" CanUserSortColumns="False"
                      CanUserResizeColumns="False" CanUserReorderColumns="False"
                      CanUserAddRows="False"
                      CellStyle="{StaticResource CellStyle}"
                      ColumnHeaderStyle="{StaticResource ColumnHeader}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="#" Width="60" Binding="{Binding RowID}" 
                                        IsReadOnly="True"
                                        HeaderStyle="{StaticResource RowIDColumnHeader}"
                                        ElementStyle="{StaticResource rowIdTextStyle}"
                                        CellStyle="{StaticResource rowIdStyle}"/>
                    <DataGridTextColumn Header="Artist" Binding="{Binding ArtistName}" 
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource SongQueueWrap}"/>
                    <DataGridTextColumn Header="Song" Binding="{Binding Title}" 
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource SongQueueWrap}"/>
                    <DataGridTextColumn Header="Genre" Binding="{Binding Genre}"
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource SongQueueWrap}"/>
                    <DataGridTextColumn Header="Speed" Binding="{Binding Speed}" 
                                        IsReadOnly="True"
                                        ElementStyle="{StaticResource SongQueueWrap}"/>
                </DataGrid.Columns>
            </DataGrid>

            <Grid Grid.Column="1" Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                 <!--Auto DJ Title-->
                <TextBlock Grid.Column="1"
                           Text="Auto-DJ"
                           Style="{StaticResource titleStyle}"/>
                
                <!--Genre Buttons-->
                <Grid Grid.Column="1"
                            Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Genres" 
                               Style="{StaticResource autoDjHeader}"
                               HorizontalAlignment="Center"/>
                    <Grid Grid.Row="1">
                        <Grid.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource autoDjButton}">
                                <Setter Property="cal:Message.Attach" 
                                        Value="[Event Click] = [Action SortByGenre($source)]"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="rockButton" Content="Rock" Grid.Column="0"/>
                        <Button x:Name="popButton" Content="Pop" Grid.Column="1"/>
                        <Button x:Name="danceButton" Content="Dance" Grid.Column="2"/>
                    </Grid>
                </Grid>
                
                 <!--Speed Buttons-->
                <Grid Grid.Column="1"
                      Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Speed" 
                               Style="{StaticResource autoDjHeader}"
                               HorizontalAlignment="Center"/>
                    <Grid Grid.Row="1">
                        <Grid.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource autoDjButton}">
                                <Setter Property="cal:Message.Attach"
                                        Value="[Event Click] = [Action SortBySpeed($source)]"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="slowButton" Content="Slow" Grid.Column="0"/>
                        <Button x:Name="fastButton" Content="Fast" Grid.Column="1"/>
                    </Grid>
                </Grid>
                
                <!--Separator--> 
                <Rectangle Stroke="{DynamicResource TextForeground}"
                           HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Grid.Row="2" Grid.Column="1"/>
            </Grid>
            <!--Karaoke & Effects-->
            <Grid Grid.Row="1" Grid.Column="1"
                  Margin="10 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource autoDjButton}"/>
                </Grid.Resources>
                <Button x:Name="OpenKaraoke" Content="Karaoke" Grid.Column="0"/>
                <Button x:Name="AddVoiceEffects"
                        Background="{Binding EffectsButtonColor}"
                        Content="Effects" Grid.Column="1"
                        IsEnabled="{Binding KaraokeOpen}"/>
            </Grid>
            
            <!--BPM Slider & Color Wheel-->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>
                <Slider VerticalAlignment="Center"
                        Value="{Binding Path=Bpm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Margin="10"/>
                <Button Grid.Column="1"
                        Style="{StaticResource cWheelButton}">
                    <Image 
                           Grid.Column="1"/>
                </Button>
            </Grid>
        </Grid>
    </Border>
</UserControl>
