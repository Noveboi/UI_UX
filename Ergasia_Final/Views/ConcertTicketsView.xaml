<UserControl x:Class="Ergasia_Final.Views.ConcertTicketsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ergasia_Final.Views"
             mc:Ignorable="d" 
             xmlns:cal="http://www.caliburnproject.org" 
             xmlns:viewmodels="clr-namespace:Ergasia_Final.ViewModels" 
             d:DataContext="{d:DesignInstance Type=viewmodels:ConcertTicketsViewModel}"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Background="{DynamicResource MainBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        
        <!--Instructions-->
        <TextBlock Text="Click on the area you want to be in using the map below!" 
                   Style="{StaticResource simpleText}"
                   VerticalAlignment="Bottom"
                   HorizontalAlignment="Center"
                   Margin="20 0"/>

        <!--Concert Map Grid-->
        <Border Grid.Column="0" Margin="20"
                Grid.Row="1"
                BorderBrush="Beige" BorderThickness="4"
                Background="ForestGreen">
            <Grid Margin="20 5 20 20">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="3*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.Resources>
                    <Style TargetType="ToggleButton">
                        <Setter Property="Margin" Value="7.5"/>
                        <Setter Property="FontSize" Value="22"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="BorderBrush" Value="Beige"/>
                        <Setter Property="Background" Value="#994444"/>
                        <Setter Property="Foreground" Value="#f0f0f0"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter Margin="2"
                                                          RecognizesAccessKey="True"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#444499"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#f0f0f0" Opacity="0.3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" Value="#998888"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="Background" Value="#666699"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="BorderThickness" Value="2"/>
                                    <Setter Property="Background" Value="#996666"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="HorizontalAlignment" Value="Center"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Grid.Resources>
                
                <!--Side VIP-->
                <ToggleButton x:Name="ChooseSide1" 
                              IsChecked="{Binding SideVip1Checked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Grid.RowSpan="3">
                    <TextBlock Text="Side VIP 1"/>
                </ToggleButton>
                <ToggleButton x:Name="ChooseSide2" 
                              IsChecked="{Binding SideVip2Checked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Grid.Column="2" Grid.RowSpan="3">
                    <TextBlock Text="Side VIP 2"/>
                </ToggleButton>
                
                <!--Stage-->
                <ToggleButton x:Name="Stage"
                              IsEnabled="False"
                              Grid.Column="1" Grid.RowSpan="2">
                    <TextBlock Text="{Binding Path=ArtistName, Mode=OneTime}"/>
                </ToggleButton>
            
                <!--VIP-->
                <ToggleButton x:Name="ChooseVip" 
                              IsChecked="{Binding VipChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Grid.Row="2" Grid.Column="1">
                    <TextBlock Text="VIP"/>
                </ToggleButton>

                 <!--General Admission-->
                <ToggleButton x:Name="ChooseGenAdmission"
                              IsChecked="{Binding GenAdChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Grid.Row="3" Grid.Column="1">
                    <TextBlock Text="General Admission"/>
                </ToggleButton>
            </Grid>
        </Border>
        
        <!--Price & Details-->
        <Grid Grid.Column="1"
              Grid.Row="1"
              Margin="20">
            <Grid.RowDefinitions>
                <RowDefinition Height="80"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="80"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="TextBlock" x:Key="WarningTextBlock">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="#fe1155" Opacity="0.0"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FontWeight" Value="Light"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsTicketsOutOfRange, 
                               UpdateSourceTrigger=PropertyChanged}" 
                               Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames 
                                            Storyboard.TargetProperty="Foreground.Opacity"
                                            Duration="0:0:4">
                                            <LinearDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:2.4" Value="1"/>
                                            <LinearDoubleKeyFrame KeyTime="0:0:4" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <!--P&D Row 0-->
            <TextBlock Text="Price" 
                       VerticalAlignment="Top"
                       Style="{StaticResource titleStyle}"/>
            
            <!--P&D Row 1-->
            <TextBlock Text="{Binding Path=TotalPrice, UpdateSourceTrigger=PropertyChanged}" 
                       Style="{StaticResource titleStyle}"
                       FontWeight="Light"
                       Grid.Row="1"/>
            <Separator Grid.Row="1" VerticalAlignment="Bottom"
                       Background="{DynamicResource TextForeground}"/>
            
            <!--P&D Row 2-->
            <Grid Grid.Row="2" Margin="0 20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Tickets" Style="{StaticResource simpleText}" 
                           HorizontalAlignment="Center"/>
                <Grid Grid.Row="1" MaxHeight="50">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="RemoveTicket"
                            Background="#cc1133"
                            FontSize="20"
                            BorderThickness="0"
                            Content="-"/>
                    <TextBox FontSize="24" 
                             Grid.Column="1"
                             TextAlignment="Center"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             Text="{Binding Path=TicketQuantity, 
                                    Mode=TwoWay, 
                                    UpdateSourceTrigger=PropertyChanged}"/>
                    <Button x:Name="AddTicket"
                            Background="#33cc11"
                            BorderThickness="0"
                            FontSize="20"
                            Content="+"
                            Grid.Column="2"/>
                </Grid>
                <TextBlock Style="{StaticResource WarningTextBlock}"
                           Text="You can only purchase from 1 to 99 tickets!"
                           Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Top"
                           FontSize="11">
                </TextBlock>
            </Grid>
            
            <!--P&D Row 3-->
            <Button x:Name="GoToEPay"
                    FontSize="26"
                    FontWeight="Medium"
                    Grid.Row="3"
                    Content="Checkout"></Button>
        </Grid>
    </Grid>
</UserControl>
